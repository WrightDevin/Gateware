/*! \mainpage Gateware Libraries
*
* \copyright Copyright (c) 2016 7thGate Software .LLC
* \license Gateware libraries are released under Creative Commons MIT lincense unless noted differently by the library.
* \version Beta Release
*
* \section Install Installation
* Gateware Libraries supports four deployment types: Static Libraries, Implicit DLLs, Explicit DLLs, and Source code
* if needed.
*
* See distributed zip file for more details.
*
*
* \section API API Overview
* The goal of this API is to provide efficient, cross-platform libraries that
* handle functionality common to games and apps and work on all major platforms 
* (Mac, Linux, Windows). The interfaces are intended to be light-weight and easy 
* to use so end-users (students) can easily integrate them into their own projects. 
*
* \subsection APIGLog GLog
* The GLog library is intended to provide a simple way to log information to a file.
* This functionality is most useful for implementing error logging. This library
* supports binary and text file output and also has options for concurrent logging
* to console. The GLog library makes heavy use of the GFile library to interface with 
* platform specific file IO.
*
*
* \subsection APIGFile GFile
* The GFile library is intended to provide a simple interface that can open,
* read from and write binary or UTF-8 encoded text to files on any major platform.
* GFile also has support for getting and setting a current working directory, as well
* as retrieving all file names from said directory. 
*
*
* \subsection APIGInput GInput
* The goal of the GInput library is to provide a multi-platform interface for 
* accurately handling high-speed keyboard and mouse input. This type of raw
* input handling is useful for games that need to get real-time user input 
* and react to it quickly. Users can also query the state of individual keys, 
* as well as get mouse position data. 
*
* \subsection APIGBufferedInput GBufferedInput
* GBuffered input provides a similar function to GInput, but implements an
* event based system that is reacting to platform specific keyboard and mouse
* input events, instead of catching raw input. GBufferedInput is directly 
* derived from GBroadcast, meaning it must have a Listener attached to it 
* to function. This type of input is more useful in any situation where speed is 
* not as important, like navigating menus and entering text into fields. 
*
* \section Reporting Bug Reporting
* Each team that Gateware deploys to will designate one team member to be their
* Reporter. The Reporter will post bugs to the Gateware Underdog page on behalf
* of their team.
*/
